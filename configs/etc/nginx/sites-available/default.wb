# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

upload_progress fwupdate 1M;

server {
	#listen   80; ## listen for ipv4; this line is default and implied
	#listen   [::]:80 default_server ipv6only=on; ## listen for ipv6

	root /var/www;

	gzip on;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_min_length 1200;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/font-woff image/svg+xml;

	# Make site accessible from http://localhost/
	server_name localhost;

	auth_request /auth/check;
	auth_request_set $homeui_user $upstream_http_homeui_user;

	location / {
		index index.html;
		try_files $uri $uri/ /index.html;
		add_header Cache-Control "no-store, no-cache, must-revalidate";
		error_page 401 @error401;
	}

	location /index.html {
		sub_filter_once on;
		sub_filter '<head>' '</head><script language="javascript">localStorage.setItem("user_type", "$homeui_user");</script>';
	}

	location ~ ^/(favicon\.ico|robots\.txt|images\/logo\.svg)$ {
		auth_request off;
	}

	location ~* \.(js|jpg|jpeg|gif|png|svg|css|json)$ {
		add_header Cache-Control "max-age=31536000";
	}

    location /api/check {

        limit_except GET {
            deny all;
        }

        fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/check.sh;
        fastcgi_param HTTP_SCHEME $scheme;
        fastcgi_param SCRIPT_NAME check.sh;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_pass unix:/var/run/fcgiwrap.socket;

    }

    location /fwupdate/download/rootfs {

        limit_except GET {
            deny all;
        }

        fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/download_rootfs.sh;
        fastcgi_param SCRIPT_NAME download_rootfs.sh;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_pass unix:/var/run/fcgiwrap.socket;
        fastcgi_request_buffering off;  # to allow stream-downloading via backend

    }

    location /fwupdate/download/configs {

        limit_except GET {
            deny all;
        }

        fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/download_configs.sh;
        fastcgi_param SCRIPT_NAME download_configs.sh;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_pass unix:/var/run/fcgiwrap.socket;
        fastcgi_request_buffering off;  # to allow stream-downloading via backend

    }

    location /fwupdate/download/everything {

        limit_except GET {
            deny all;
        }

        fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/download_everything.sh;
        fastcgi_param SCRIPT_NAME download_everything.sh;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_pass unix:/var/run/fcgiwrap.socket;
        fastcgi_request_buffering off;  # to allow stream-downloading via backend

    }

	location /fwupdate/upload {
		limit_except POST {
			deny all;
		}
		client_body_buffer_size 128K;
		client_max_body_size 1000M;

		gzip off;

		fastcgi_param UPLOADS_DIR /var/www/uploads;
		fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/fwupdate_upload.py;
		fastcgi_param SCRIPT_NAME fwupdate_upload.py;
		fastcgi_param QUERY_STRING $query_string;
		fastcgi_param REQUEST_METHOD $request_method;
		fastcgi_param CONTENT_TYPE $content_type;
		fastcgi_param CONTENT_LENGTH $content_length;
		fastcgi_param REQUEST_URI $request_uri;
		fastcgi_pass unix:/var/run/fcgiwrap.socket;
		fastcgi_request_buffering off;  # to allow stream-downloading via backend

		track_uploads fwupdate 5s;
	}

	location /fwupdate/factoryreset {
		limit_except POST {
			deny all;
		}
		gzip off;

		fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/factory_reset.py;
		fastcgi_param SCRIPT_NAME factory_reset.py;
		fastcgi_param QUERY_STRING $query_string;
		fastcgi_param REQUEST_METHOD $request_method;
		fastcgi_param CONTENT_TYPE $content_type;
		fastcgi_param CONTENT_LENGTH $content_length;
		fastcgi_param REQUEST_URI $request_uri;
		fastcgi_pass unix:/var/run/fcgiwrap.socket;
	}

	location /fwupdate/progress {
		report_uploads fwupdate;
	}

	location /mqtt {
	    proxy_pass http://127.0.0.1:18883;
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection upgrade;
	}

	location /auth/check {
		internal;
		fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/auth.py;
		fastcgi_param SCRIPT_NAME auth.py;
		fastcgi_param REQUEST_URI $request_uri;
		fastcgi_param ACTION check_auth;
		fastcgi_pass unix:/var/run/fcgiwrap.socket;
	}

	location /auth/user {
		limit_except POST {
			deny all;
		}
		gzip off;
		auth_request off;

		fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/auth.py;
		fastcgi_param SCRIPT_NAME auth.py;
		fastcgi_param ACTION auth_setup;
		fastcgi_pass unix:/var/run/fcgiwrap.socket;
	}

	location /login {
		auth_request off;
		if ($request_method = POST) {
			rewrite ^ /login_script last;
		}
		try_files $uri $uri.html;
	}

	location /login_script {
		internal;
		auth_request off;
		fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/auth.py;
		fastcgi_param SCRIPT_NAME auth.py;
		fastcgi_param ACTION login;
		fastcgi_pass unix:/var/run/fcgiwrap.socket;
		auth_request_set $saved_set_cookie $upstream_http_set_cookie;
		add_header Set-Cookie $saved_set_cookie;
	}

	location /logout {
		limit_except POST {
			deny all;
		}
		add_header Set-Cookie "id=; expires=Thu, 01 Jan 1970 00:00:00 GMT";
		return 200;
	}

	location /not_configured_users {
		limit_except GET {
			deny all;
		}

		fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/auth.py;
		fastcgi_param SCRIPT_NAME auth.py;
		fastcgi_param ACTION not_configured_users;
		fastcgi_pass unix:/var/run/fcgiwrap.socket;
	}

	location @error401 {
		return 302 /login;
	}
}
