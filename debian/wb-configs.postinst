#!/bin/bash
. /usr/lib/wb-utils/wb_env.sh
wb_source "of"

# generate u-boot env config before config-package debheler 
UBOOT_DIR="/usr/share/wb-configs/u-boot"
UBOOT_FNAME="fw_env.config.wb"
if of_machine_match "allwinner,sun8i-r40"; then
    FVER="sun8i"
elif of_machine_match "fsl,imx6ul" || of_machine_match "fsl,imx6ull"; then
    FVER="imx6"
elif of_machine_match "fsl,imx28" || of_machine_match "fsl,imx23"; then
    FVER="mxs"
else
    FVER="default"
fi
cp "${UBOOT_DIR}/${UBOOT_FNAME}.${FVER}" "/etc/${UBOOT_FNAME}"

ours=.wb
theirs=.wb-orig

# Remove diversion of sshd_configs from wb-configs which
# was accidently left unattended

# These functions are taken from config-package-dev heplers
# with modifications which allow to remove diversions from
# other packages
wb_undisplace_unlink_symlink()
{
    file="$1"
    ourfile="$2"
    theirfile="$3"
    if [ ! -L "$file" ] || \
	[ "$(readlink "$file")" != "$(basename "$ourfile")" -a \
	  "$(readlink "$file")" != "$(basename "$theirfile")" ]; then
	echo "*** OMINOUS WARNING ***: $file is not linked to either $(basename "$ourfile") or $(basename "$theirfile")" >&2
    else
	rm -f "$file"
    fi
}

wb_undisplace_unlink_displace()
{
    file="$1"
    if [ ! -L "$file" ] && [ ! -e "$file" ]; then
    echo "Run dpkg-divert --remove..."
	dpkg-divert --remove --rename "$file"
    else
	echo "Not removing diversion of $file by $package" >&2
    fi
}

wb_undisplace_unlink()
{
    prefix=$1
    suffix=$2

    file=$prefix$suffix
    ourfile=$prefix$ours$suffix
    theirfile=$prefix$theirs$suffix

    wb_undisplace_unlink_symlink "$file" "$ourfile" "$theirfile"
    wb_undisplace_unlink_displace "$file"
}

wb_check_undisplace_unlink_from()
{
    prefix=$1
    suffix=$2
    from_package=$3
    from_version=$4

    file=$prefix$suffix
    ourfile=$prefix$ours$suffix
    theirfile=$prefix$theirs$suffix

    if LC_ALL=C dpkg-divert --list "$from_package" | \
	grep -xFq "diversion of $file to $theirfile by $from_package" &&
    dpkg --compare-versions `dpkg-query -f '${Version}' -W "$from_package"` "lt" "$from_version"; then
        echo "Picking up diversion of $file from $package to replace it with our one"
	    wb_undisplace_unlink "$prefix" "$suffix" "$from_package"
    fi
}

if [ "$1" = "configure" ]; then
    wb_check_undisplace_unlink_from /etc/ssh/sshd_config "" wb-configs "1.75.4"
fi

#DEBHELPER#

RULES_DST_DIR=/etc/udev/rules.d
RULES_DIR=/usr/share/wb-configs/udev/

# Args:
# - rules file (e.g. "99-wb-uart")
# - suffix (e.g. "wb5")
install_rules() {
	ucf --debconf-ok "$RULES_DIR/$1.rules.$2" "$RULES_DST_DIR/$1.rules"
}

if of_machine_match "wirenboard,wirenboard-720"; then
    install_rules 99-wb-uart wb72
    install_rules 99-wb-ethernet wb72
elif of_machine_match "contactless,imx6ul-wirenboard670"; then
    install_rules 99-wb-uart wb67
    install_rules 99-wb-ethernet wb6
elif of_machine_match "contactless,imx6ul-wirenboard60"; then
    install_rules 99-wb-uart wb6
    install_rules 99-wb-ethernet wb6
elif of_machine_match "contactless,imx28-wirenboard50"; then
    install_rules 99-wb-uart wb5
elif of_machine_match "contactless,imx23-wirenboard41"; then
    install_rules 99-wb-uart wb4
elif of_machine_match "contactless,imx23-wirenboard32"; then
    install_rules 99-wb-uart wb3
elif of_machine_match "contactless,imx23-wirenboard28"; then
    install_rules 99-wb-uart wb2
else
    install_rules 99-wb-uart default
fi

udevadm trigger # apply new udev rules

if dpkg-query -s rsyslog >/dev/null 2>/dev/null; then
    rm -f /etc/logrotate.d/messages
fi

rm -f /etc/logrotate.d/rsyslog
rm -f /etc/update-motd.d/10-uname

# remove default Debian motd
if [[ -f /etc/motd ]] && [[ $(sha256sum /etc/motd | head -c 6) == 'a37897' ]]; then
    rm -f /etc/motd
    ln -s /var/run/motd /etc/motd
fi

deb-systemd-invoke reload nginx || true

# comment old patched mosquitto's `allow_anonymous_localhost` out
# or it will break new mosquitto launch
OPT_REGEX='^\s*\(allow_anonymous_localhost\)'
if grep -q -R --include=\*.conf "$OPT_REGEX" /etc/mosquitto/; then
    DEPR_MSG="allow_anonymous_localhost is deprecated, use per listener settings from mosquitto 2.0"
    echo "WARNING: $DEPR_MSG"
    find /etc/mosquitto/ -name '*.conf' \
        -exec grep -q '^\s*allow_anonymous_localhost' '{}' \; \
        -exec sed -i.wb-bak3 "s/${OPT_REGEX}/# ${DEPR_MSG}\n#\1/" '{}' \;
fi

# this flag may be created in preinst
MOSQUITTO_UPGRADE_FLAG=/var/lib/wirenboard/.mosquitto2-upgrade-restart-required

if [ -f $MOSQUITTO_UPGRADE_FLAG ]; then
    echo "mosquitto configs are updated, restarting mosquitto and all Wiren Board MQTT services"

    # SERVICES=(mosquitto wb-mqtt-adc wb-mqtt-confed wb-mqtt-db wb-mqtt-gpio wb-mqtt-mbgate wb-mqtt-opcua wb-mqtt-serial wb-mqtt-w1 wb-rules)
    # for service in ${SERVICES[@]}; do
        # deb-systemd-invoke restart $service
    # done

    rm $MOSQUITTO_UPGRADE_FLAG -rf
fi

deb-systemd-invoke restart rsyslog || true
deb-systemd-invoke start watchdog
deb-systemd-invoke restart systemd-journald

# remove transitional files left after 2.0~~transitional
if echo "$2" | grep '~~transitional' >/dev/null; then
    echo "Cleaning up transitional APT settings"
    rm -f /etc/apt/preferences.d/00wirenboard-release-transition-tmp
    rm -f /etc/apt/sources.list.d/wirenboard-release-transition-tmp.list
    rm -f /etc/update-motd.d/99wb-upgrade-transition-tmp

    echo "Generating new APT preferences according to installed release info"
    wb-release -r
fi
